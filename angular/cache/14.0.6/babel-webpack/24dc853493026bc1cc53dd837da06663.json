{"ast":null,"code":"import _asyncToGenerator from \"D:/Code PJ/SocialNetworkWebApp/SocialNetworkWebApp-FE/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\nimport { firstValueFrom } from 'rxjs';\nimport { CreatePostComponent } from 'src/app/components/create-post/create-post.component';\nimport { Chatroom } from 'src/app/models/chatroom.model';\nimport { User } from 'src/app/models/user.model';\nimport Swal from 'sweetalert2';\nlet NewsfeedComponent = class NewsfeedComponent {\n  constructor(elementRef, router, formBuilder, userService, newsfeedService, relationService, chattingService) {\n    this.elementRef = elementRef;\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this.userService = userService;\n    this.newsfeedService = newsfeedService;\n    this.relationService = relationService;\n    this.chattingService = chattingService;\n    this.currentUser = new User();\n    this.chatroomData = new Chatroom();\n    this.newFeeds = [];\n    this.friends = [];\n    this.friendRequests = [];\n    this.chatrooms = [];\n    this.paging = 0;\n    this.canLoadMore = true;\n    this.changePassFormGroup = new FormGroup('');\n    this.currentPassStr = '';\n    this.newPassStr = '';\n    this.confirmPassStr = '';\n  }\n\n  ngOnInit() {\n    this.initLoadMoreScrollEvent();\n    this.initChangePassFormGroup();\n    this.getHomeInfomations();\n  }\n\n  getHomeInfomations() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let userID = localStorage.getItem('authorizeToken');\n\n      if (userID) {\n        _this.currentUser = yield firstValueFrom(_this.userService.getById(userID));\n\n        _this.getNewFeeds();\n\n        _this.getFriendRequests();\n\n        _this.getChatrooms();\n      } else {\n        _this.router.navigateByUrl('');\n      }\n    })();\n  }\n\n  getNewFeeds() {\n    this.newsfeedService.getUserFeeds(this.currentUser.id, this.paging, false).subscribe(data => this.newFeeds = data, error => console.log(error));\n    this.paging++;\n  }\n\n  getFriends() {\n    this.relationService.getUserRelationship(this.currentUser.id).subscribe(data => this.friends = data);\n  }\n\n  getFriendRequests() {\n    this.relationService.getFriendRequestByUserId(this.currentUser.id).subscribe(data => this.friendRequests = data);\n  }\n\n  getChatrooms() {\n    this.chattingService.getAllChatroomsByUserId(this.currentUser.id).subscribe(data => this.chatrooms = data);\n  }\n\n  logout() {\n    Swal.fire({\n      icon: 'question',\n      title: 'Logout',\n      text: 'Are you sure?',\n      showCancelButton: true,\n      showConfirmButton: true,\n      focusCancel: true,\n      confirmButtonText: 'Yes, log me out',\n      cancelButtonText: 'No, stay here',\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33'\n    }).then(result => {\n      if (result.isConfirmed) {\n        localStorage.removeItem('authorizeToken');\n        console.log(localStorage);\n        this.router.navigateByUrl('');\n      }\n    });\n  }\n\n  showChatroom(chatroom, isShow) {\n    const popup = this.elementRef.nativeElement.querySelector('.chatroom');\n    popup.style.display = isShow ? 'block' : 'none';\n\n    if (chatroom) {\n      this.chatroomData = chatroom;\n    } // if (isShow && chatroom) {\n    //   this.chatUser = this.currentUser.id === chatroom.chatMembers[0].id ?\n    //     chatroom.chatMembers[1] : chatroom.chatMembers[0];\n    //   this.chatUser = Object.assign(new User(), this.chatUser);\n    // }\n\n  }\n\n  showTab(tabIndex) {\n    const tabHome = this.elementRef.nativeElement.querySelector('.tab-home');\n    const tabFriends = this.elementRef.nativeElement.querySelector('.tab-friends');\n    const tabSettings = this.elementRef.nativeElement.querySelector('.tab-settings');\n    tabHome.style.display = 'none';\n    tabFriends.style.display = 'none';\n    tabSettings.style.display = 'none';\n\n    switch (tabIndex) {\n      case 0:\n        {\n          tabHome.style.display = 'block';\n          break;\n        }\n\n      case 1:\n        {\n          tabFriends.style.display = 'block';\n          this.getFriends();\n          break;\n        }\n\n      case 2:\n        {\n          tabSettings.style.display = 'block';\n          break;\n        }\n\n      default:\n        break;\n    }\n  }\n\n  navigateToWall() {\n    this.router.navigateByUrl('/home/wall');\n  }\n\n  createPostButtonClick() {\n    if (this.createPost) {\n      this.createPost.showCreatePost();\n      this.showTab(0);\n    }\n  }\n\n  initChangePassFormGroup() {\n    this.changePassFormGroup = this.formBuilder.group({\n      oldPass: ['', Validators.required],\n      newPass: ['', Validators.required],\n      confirmPass: ['', Validators.required]\n    });\n  }\n\n  initLoadMoreScrollEvent() {\n    window.onscroll = () => {\n      if (window.innerHeight + window.scrollY >= document.body.scrollHeight && this.canLoadMore) {\n        this.newsfeedService.getUserFeeds(this.currentUser.id, this.paging, false).subscribe(data => {\n          this.canLoadMore = false;\n\n          if (data.length > 0) {\n            this.newFeeds.push(...data);\n            this.canLoadMore = true;\n            this.paging++;\n          }\n        });\n      }\n    };\n  }\n\n};\n\n__decorate([ViewChild(CreatePostComponent)], NewsfeedComponent.prototype, \"createPost\", void 0);\n\nNewsfeedComponent = __decorate([Component({\n  selector: 'app-newsfeed',\n  templateUrl: './newsfeed.component.html',\n  styleUrls: ['./newsfeed.component.scss']\n})], NewsfeedComponent);\nexport { NewsfeedComponent };","map":{"version":3,"mappings":";;AAAA,SAASA,SAAT,EAAwCC,SAAxC,QAAyD,eAAzD;AACA,SAAmCC,SAAnC,EAA8CC,UAA9C,QAAgE,gBAAhE;AAEA,SAASC,cAAT,QAA+B,MAA/B;AACA,SAASC,mBAAT,QAAoC,sDAApC;AACA,SAASC,QAAT,QAAyB,+BAAzB;AAGA,SAASC,IAAT,QAAqB,2BAArB;AAKA,OAAOC,IAAP,MAAiB,aAAjB;AAOA,IAAaC,iBAAiB,GAA9B,MAAaA,iBAAb,CAA8B;EAmB5BC,YACUC,UADV,EAEUC,MAFV,EAGUC,WAHV,EAIUC,WAJV,EAKUC,eALV,EAMUC,eANV,EAOUC,eAPV,EAO0C;IANhC;IACA;IACA;IACA;IACA;IACA;IACA;IAvBV,mBAAoB,IAAIV,IAAJ,EAApB;IACA,oBAAyB,IAAID,QAAJ,EAAzB;IACA,gBAAmB,EAAnB;IACA,eAAwB,EAAxB;IACA,sBAA+B,EAA/B;IACA,iBAAwB,EAAxB;IAEA,cAAiB,CAAjB;IACA,mBAAuB,IAAvB;IAEA,2BAAiC,IAAIJ,SAAJ,CAAc,EAAd,CAAjC;IAEA,sBAAyB,EAAzB;IACA,kBAAqB,EAArB;IACA,sBAAyB,EAAzB;EAS+C;;EAE/CgB,QAAQ;IACN,KAAKC,uBAAL;IACA,KAAKC,uBAAL;IACA,KAAKC,kBAAL;EACD;;EAEKA,kBAAkB;IAAA;;IAAA;MACtB,IAAIC,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAb;;MACA,IAAIF,MAAJ,EAAY;QACV,KAAI,CAACG,WAAL,SAAyBrB,cAAc,CAAC,KAAI,CAACU,WAAL,CAAiBY,OAAjB,CAAyBJ,MAAzB,CAAD,CAAvC;;QAEA,KAAI,CAACK,WAAL;;QACA,KAAI,CAACC,iBAAL;;QACA,KAAI,CAACC,YAAL;MACD,CAND,MAMO;QACL,KAAI,CAACjB,MAAL,CAAYkB,aAAZ,CAA0B,EAA1B;MACD;IAVqB;EAWvB;;EAEDH,WAAW;IACT,KAAKZ,eAAL,CACGgB,YADH,CACgB,KAAKN,WAAL,CAAiBO,EADjC,EACqC,KAAKC,MAD1C,EACkD,KADlD,EAEGC,SAFH,CAEaC,IAAI,IACb,KAAKC,QAAL,GAAgBD,IAHpB,EAIIE,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAJb;IAMA,KAAKJ,MAAL;EACD;;EAEDO,UAAU;IACR,KAAKxB,eAAL,CAAqByB,mBAArB,CAAyC,KAAKhB,WAAL,CAAiBO,EAA1D,EAA8DE,SAA9D,CAAwEC,IAAI,IAAI,KAAKO,OAAL,GAAeP,IAA/F;EACD;;EAEDP,iBAAiB;IACf,KAAKZ,eAAL,CAAqB2B,wBAArB,CAA8C,KAAKlB,WAAL,CAAiBO,EAA/D,EAAmEE,SAAnE,CAA6EC,IAAI,IAAI,KAAKS,cAAL,GAAsBT,IAA3G;EACD;;EAEDN,YAAY;IACV,KAAKZ,eAAL,CAAqB4B,uBAArB,CAA6C,KAAKpB,WAAL,CAAiBO,EAA9D,EAAkEE,SAAlE,CAA4EC,IAAI,IAAI,KAAKW,SAAL,GAAiBX,IAArG;EACD;;EAEDY,MAAM;IACJvC,IAAI,CAACwC,IAAL,CAAU;MACRC,IAAI,EAAE,UADE;MAERC,KAAK,EAAE,QAFC;MAGRC,IAAI,EAAE,eAHE;MAIRC,gBAAgB,EAAE,IAJV;MAKRC,iBAAiB,EAAE,IALX;MAMRC,WAAW,EAAE,IANL;MAORC,iBAAiB,EAAE,iBAPX;MAQRC,gBAAgB,EAAE,eARV;MASRC,kBAAkB,EAAE,SATZ;MAURC,iBAAiB,EAAE;IAVX,CAAV,EAWGC,IAXH,CAWQC,MAAM,IAAG;MACf,IAAIA,MAAM,CAACC,WAAX,EAAwB;QACtBtC,YAAY,CAACuC,UAAb,CAAwB,gBAAxB;QAEAxB,OAAO,CAACC,GAAR,CAAYhB,YAAZ;QACA,KAAKX,MAAL,CAAYkB,aAAZ,CAA0B,EAA1B;MACD;IACF,CAlBD;EAmBD;;EAEDiC,YAAY,CAACC,QAAD,EAA4BC,MAA5B,EAA2C;IACrD,MAAMC,KAAK,GAAG,KAAKvD,UAAL,CAAgBwD,aAAhB,CAA8BC,aAA9B,CAA4C,WAA5C,CAAd;IACAF,KAAK,CAACG,KAAN,CAAYC,OAAZ,GAAsBL,MAAM,GAAG,OAAH,GAAa,MAAzC;;IAEA,IAAID,QAAJ,EAAc;MACZ,KAAKO,YAAL,GAAoBP,QAApB;IACD,CANoD,CAOrD;IACA;IACA;IAEA;IACA;;EACD;;EAEDQ,OAAO,CAACC,QAAD,EAAiB;IACtB,MAAMC,OAAO,GAAG,KAAK/D,UAAL,CAAgBwD,aAAhB,CAA8BC,aAA9B,CAA4C,WAA5C,CAAhB;IACA,MAAMO,UAAU,GAAG,KAAKhE,UAAL,CAAgBwD,aAAhB,CAA8BC,aAA9B,CAA4C,cAA5C,CAAnB;IACA,MAAMQ,WAAW,GAAG,KAAKjE,UAAL,CAAgBwD,aAAhB,CAA8BC,aAA9B,CAA4C,eAA5C,CAApB;IAEAM,OAAO,CAACL,KAAR,CAAcC,OAAd,GAAwB,MAAxB;IACAK,UAAU,CAACN,KAAX,CAAiBC,OAAjB,GAA2B,MAA3B;IACAM,WAAW,CAACP,KAAZ,CAAkBC,OAAlB,GAA4B,MAA5B;;IAEA,QAAQG,QAAR;MACE,KAAK,CAAL;QAAQ;UACNC,OAAO,CAACL,KAAR,CAAcC,OAAd,GAAwB,OAAxB;UACA;QACD;;MAAC,KAAK,CAAL;QAAQ;UACRK,UAAU,CAACN,KAAX,CAAiBC,OAAjB,GAA2B,OAA3B;UACA,KAAK9B,UAAL;UACA;QACD;;MAAC,KAAK,CAAL;QAAQ;UACRoC,WAAW,CAACP,KAAZ,CAAkBC,OAAlB,GAA4B,OAA5B;UACA;QACD;;MACD;QACE;IAbJ;EAeD;;EAEDO,cAAc;IACZ,KAAKjE,MAAL,CAAYkB,aAAZ,CAA0B,YAA1B;EACD;;EAEDgD,qBAAqB;IACnB,IAAI,KAAKC,UAAT,EAAqB;MACnB,KAAKA,UAAL,CAAgBC,cAAhB;MACA,KAAKR,OAAL,CAAa,CAAb;IACD;EACF;;EAEDpD,uBAAuB;IACrB,KAAK6D,mBAAL,GAA2B,KAAKpE,WAAL,CAAiBqE,KAAjB,CAAuB;MAChDC,OAAO,EAAE,CAAC,EAAD,EAAKhF,UAAU,CAACiF,QAAhB,CADuC;MAEhDC,OAAO,EAAE,CAAC,EAAD,EAAKlF,UAAU,CAACiF,QAAhB,CAFuC;MAGhDE,WAAW,EAAE,CAAC,EAAD,EAAKnF,UAAU,CAACiF,QAAhB;IAHmC,CAAvB,CAA3B;EAKD;;EAEDjE,uBAAuB;IACrBoE,MAAM,CAACC,QAAP,GAAkB,MAAK;MACrB,IAAKD,MAAM,CAACE,WAAP,GAAqBF,MAAM,CAACG,OAA7B,IAAyCC,QAAQ,CAACC,IAAT,CAAcC,YAAvD,IAAuE,KAAKC,WAAhF,EAA6F;QAC3F,KAAK/E,eAAL,CACGgB,YADH,CACgB,KAAKN,WAAL,CAAiBO,EADjC,EACqC,KAAKC,MAD1C,EACkD,KADlD,EAEGC,SAFH,CAEaC,IAAI,IAAG;UAChB,KAAK2D,WAAL,GAAmB,KAAnB;;UAEA,IAAI3D,IAAI,CAAC4D,MAAL,GAAc,CAAlB,EAAqB;YACnB,KAAK3D,QAAL,CAAc4D,IAAd,CAAmB,GAAG7D,IAAtB;YACA,KAAK2D,WAAL,GAAmB,IAAnB;YACA,KAAK7D,MAAL;UACD;QACF,CAVH;MAWD;IACF,CAdD;EAeD;;AAvK2B,CAA9B;;AACkCgE,YAA/BhG,SAAS,CAACI,mBAAD,CAAsB;;AADrBI,iBAAiB,eAL7BT,SAAS,CAAC;EACTkG,QAAQ,EAAE,cADD;EAETC,WAAW,EAAE,2BAFJ;EAGTC,SAAS,EAAE,CAAC,2BAAD;AAHF,CAAD,CAKoB,GAAjB3F,iBAAiB,CAAjB;SAAAA","names":["Component","ViewChild","FormGroup","Validators","firstValueFrom","CreatePostComponent","Chatroom","User","Swal","NewsfeedComponent","constructor","elementRef","router","formBuilder","userService","newsfeedService","relationService","chattingService","ngOnInit","initLoadMoreScrollEvent","initChangePassFormGroup","getHomeInfomations","userID","localStorage","getItem","currentUser","getById","getNewFeeds","getFriendRequests","getChatrooms","navigateByUrl","getUserFeeds","id","paging","subscribe","data","newFeeds","error","console","log","getFriends","getUserRelationship","friends","getFriendRequestByUserId","friendRequests","getAllChatroomsByUserId","chatrooms","logout","fire","icon","title","text","showCancelButton","showConfirmButton","focusCancel","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","then","result","isConfirmed","removeItem","showChatroom","chatroom","isShow","popup","nativeElement","querySelector","style","display","chatroomData","showTab","tabIndex","tabHome","tabFriends","tabSettings","navigateToWall","createPostButtonClick","createPost","showCreatePost","changePassFormGroup","group","oldPass","required","newPass","confirmPass","window","onscroll","innerHeight","scrollY","document","body","scrollHeight","canLoadMore","length","push","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\Code PJ\\SocialNetworkWebApp\\SocialNetworkWebApp-FE\\src\\app\\dashboard\\newsfeed\\newsfeed.component.ts"],"sourcesContent":["import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { firstValueFrom } from 'rxjs';\r\nimport { CreatePostComponent } from 'src/app/components/create-post/create-post.component';\r\nimport { Chatroom } from 'src/app/models/chatroom.model';\r\nimport { Friendship } from 'src/app/models/friendship.model';\r\nimport { Post } from 'src/app/models/post.model';\r\nimport { User } from 'src/app/models/user.model';\r\nimport { ChattingService } from 'src/app/services/chatting.service';\r\nimport { NewsFeedService } from 'src/app/services/newfeeds.service';\r\nimport { RelationService } from 'src/app/services/relation.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-newsfeed',\r\n  templateUrl: './newsfeed.component.html',\r\n  styleUrls: ['./newsfeed.component.scss']\r\n})\r\nexport class NewsfeedComponent implements OnInit {\r\n  @ViewChild(CreatePostComponent) createPost?: CreatePostComponent;\r\n\r\n  currentUser: User = new User();\r\n  chatroomData: Chatroom = new Chatroom();\r\n  newFeeds: Post[] = [];\r\n  friends: Friendship[] = [];\r\n  friendRequests: Friendship[] = [];\r\n  chatrooms: Chatroom[] = [];\r\n\r\n  paging: number = 0;\r\n  canLoadMore: boolean = true;\r\n\r\n  changePassFormGroup: FormGroup = new FormGroup('');\r\n\r\n  currentPassStr: string = '';\r\n  newPassStr: string = '';\r\n  confirmPassStr: string = '';\r\n\r\n  constructor(\r\n    private elementRef: ElementRef,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private userService: UserService,\r\n    private newsfeedService: NewsFeedService,\r\n    private relationService: RelationService,\r\n    private chattingService: ChattingService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initLoadMoreScrollEvent();\r\n    this.initChangePassFormGroup();\r\n    this.getHomeInfomations();\r\n  }\r\n\r\n  async getHomeInfomations(): Promise<void> {\r\n    let userID = localStorage.getItem('authorizeToken');\r\n    if (userID) {\r\n      this.currentUser = await firstValueFrom(this.userService.getById(userID));\r\n\r\n      this.getNewFeeds();\r\n      this.getFriendRequests();\r\n      this.getChatrooms();\r\n    } else {\r\n      this.router.navigateByUrl('');\r\n    }\r\n  }\r\n\r\n  getNewFeeds(): void {\r\n    this.newsfeedService\r\n      .getUserFeeds(this.currentUser.id, this.paging, false)\r\n      .subscribe(data =>\r\n        this.newFeeds = data,\r\n        error => console.log(error));\r\n\r\n    this.paging++;\r\n  }\r\n\r\n  getFriends(): void {\r\n    this.relationService.getUserRelationship(this.currentUser.id).subscribe(data => this.friends = data);\r\n  }\r\n\r\n  getFriendRequests(): void {\r\n    this.relationService.getFriendRequestByUserId(this.currentUser.id).subscribe(data => this.friendRequests = data);\r\n  }\r\n\r\n  getChatrooms(): void {\r\n    this.chattingService.getAllChatroomsByUserId(this.currentUser.id).subscribe(data => this.chatrooms = data);\r\n  }\r\n\r\n  logout(): void {\r\n    Swal.fire({\r\n      icon: 'question',\r\n      title: 'Logout',\r\n      text: 'Are you sure?',\r\n      showCancelButton: true,\r\n      showConfirmButton: true,\r\n      focusCancel: true,\r\n      confirmButtonText: 'Yes, log me out',\r\n      cancelButtonText: 'No, stay here',\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33'\r\n    }).then(result => {\r\n      if (result.isConfirmed) {\r\n        localStorage.removeItem('authorizeToken');\r\n\r\n        console.log(localStorage);\r\n        this.router.navigateByUrl('');\r\n      }\r\n    });\r\n  }\r\n\r\n  showChatroom(chatroom: Chatroom | null, isShow: boolean): void {\r\n    const popup = this.elementRef.nativeElement.querySelector('.chatroom');\r\n    popup.style.display = isShow ? 'block' : 'none';\r\n\r\n    if (chatroom) {\r\n      this.chatroomData = chatroom;\r\n    }\r\n    // if (isShow && chatroom) {\r\n    //   this.chatUser = this.currentUser.id === chatroom.chatMembers[0].id ?\r\n    //     chatroom.chatMembers[1] : chatroom.chatMembers[0];\r\n\r\n    //   this.chatUser = Object.assign(new User(), this.chatUser);\r\n    // }\r\n  }\r\n\r\n  showTab(tabIndex: number): void {\r\n    const tabHome = this.elementRef.nativeElement.querySelector('.tab-home') as HTMLElement;\r\n    const tabFriends = this.elementRef.nativeElement.querySelector('.tab-friends') as HTMLElement;\r\n    const tabSettings = this.elementRef.nativeElement.querySelector('.tab-settings') as HTMLElement;\r\n\r\n    tabHome.style.display = 'none';\r\n    tabFriends.style.display = 'none';\r\n    tabSettings.style.display = 'none';\r\n\r\n    switch (tabIndex) {\r\n      case 0: {\r\n        tabHome.style.display = 'block';\r\n        break;\r\n      } case 1: {\r\n        tabFriends.style.display = 'block';\r\n        this.getFriends();\r\n        break;\r\n      } case 2: {\r\n        tabSettings.style.display = 'block';\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  navigateToWall(): void {\r\n    this.router.navigateByUrl('/home/wall');\r\n  }\r\n\r\n  createPostButtonClick(): void {\r\n    if (this.createPost) {\r\n      this.createPost.showCreatePost();\r\n      this.showTab(0);\r\n    }\r\n  }\r\n\r\n  initChangePassFormGroup(): void {\r\n    this.changePassFormGroup = this.formBuilder.group({\r\n      oldPass: ['', Validators.required],\r\n      newPass: ['', Validators.required],\r\n      confirmPass: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  initLoadMoreScrollEvent(): void {\r\n    window.onscroll = () => {\r\n      if ((window.innerHeight + window.scrollY) >= document.body.scrollHeight && this.canLoadMore) {\r\n        this.newsfeedService\r\n          .getUserFeeds(this.currentUser.id, this.paging, false)\r\n          .subscribe(data => {\r\n            this.canLoadMore = false;\r\n\r\n            if (data.length > 0) {\r\n              this.newFeeds.push(...data);\r\n              this.canLoadMore = true;\r\n              this.paging++;\r\n            }\r\n          });\r\n      }\r\n    };\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}