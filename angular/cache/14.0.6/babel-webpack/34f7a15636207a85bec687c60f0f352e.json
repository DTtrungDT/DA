{"ast":null,"code":"import _asyncToGenerator from \"D:/Code PJ/SocialNetworkWebApp/SocialNetworkWebApp-FE/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { User } from 'src/app/models/user.model';\nimport Swal from 'sweetalert2';\nlet ExploreComponent = class ExploreComponent {\n  constructor(router, activedRoute, userService, searchService, relationService, chattingService) {\n    this.router = router;\n    this.activedRoute = activedRoute;\n    this.userService = userService;\n    this.searchService = searchService;\n    this.relationService = relationService;\n    this.chattingService = chattingService;\n    this.currentUser = new User();\n    this.searchedUsers = [];\n    this.friends = [];\n    this.friendRequests = [];\n    this.chatrooms = [];\n  }\n\n  ngOnInit() {\n    this.searchUserByKeyword();\n  }\n\n  getUserInformation() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let userID = localStorage.getItem('authorizeToken');\n\n      if (userID) {\n        _this.currentUser = yield firstValueFrom(_this.userService.getById(userID));\n\n        _this.getFriendRequests();\n      }\n    })();\n  }\n\n  getFriends() {\n    this.relationService.getUserRelationship(this.currentUser.id).subscribe(data => this.friends = data);\n  }\n\n  getFriendRequests() {\n    this.relationService.getFriendRequestByUserId(this.currentUser.id).subscribe(data => this.friendRequests = data);\n  }\n\n  searchUserByKeyword() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this2.getUserInformation();\n\n      let keyword = _this2.activedRoute.snapshot.paramMap.get('keyword');\n\n      if (keyword) {\n        _this2.searchService.search(_this2.currentUser.id, keyword).subscribe(data => _this2.searchedUsers = data, error => console.log(error));\n      }\n    })();\n  }\n\n  logout() {\n    Swal.fire({\n      icon: 'question',\n      title: 'Logout',\n      text: 'Are you sure?',\n      showCancelButton: true,\n      showConfirmButton: true,\n      focusCancel: true,\n      confirmButtonText: 'Yes, log me out',\n      cancelButtonText: 'No, stay here',\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33'\n    }).then(result => {\n      if (result.isConfirmed) {\n        localStorage.removeItem('authorizeToken');\n        this.router.navigateByUrl('');\n      }\n    });\n  }\n\n  showTab(tabIndex) {\n    const tabHome = document.querySelector('.tab-home');\n    const tabFriends = document.querySelector('.tab-friends');\n    const tabSettings = document.querySelector('.tab-settings');\n    tabHome.style.display = 'none';\n    tabFriends.style.display = 'none';\n    tabSettings.style.display = 'none';\n\n    switch (tabIndex) {\n      case 0:\n        {\n          tabHome.style.display = 'block';\n          break;\n        }\n\n      case 1:\n        {\n          tabFriends.style.display = 'block';\n          this.getFriends();\n          break;\n        }\n\n      case 2:\n        {\n          tabSettings.style.display = 'block';\n          break;\n        }\n\n      default:\n        break;\n    }\n  }\n\n  navigateToWall() {\n    this.router.navigateByUrl('/home/wall');\n  }\n\n};\nExploreComponent = __decorate([Component({\n  selector: 'app-explore',\n  templateUrl: './explore.component.html',\n  styleUrls: ['./explore.component.scss']\n})], ExploreComponent);\nexport { ExploreComponent };","map":{"version":3,"mappings":"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","names":["Component","firstValueFrom","User","Swal","ExploreComponent","constructor","router","activedRoute","userService","searchService","relationService","chattingService","ngOnInit","searchUserByKeyword","getUserInformation","userID","localStorage","getItem","currentUser","getById","getFriendRequests","getFriends","getUserRelationship","id","subscribe","data","friends","getFriendRequestByUserId","friendRequests","keyword","snapshot","paramMap","get","search","searchedUsers","error","console","log","logout","fire","icon","title","text","showCancelButton","showConfirmButton","focusCancel","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","then","result","isConfirmed","removeItem","navigateByUrl","showTab","tabIndex","tabHome","document","querySelector","tabFriends","tabSettings","style","display","navigateToWall","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\Code PJ\\SocialNetworkWebApp\\SocialNetworkWebApp-FE\\src\\app\\dashboard\\explore\\explore.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { firstValueFrom } from 'rxjs';\r\nimport { Chatroom } from 'src/app/models/chatroom.model';\r\nimport { Friendship } from 'src/app/models/friendship.model';\r\nimport { User } from 'src/app/models/user.model';\r\nimport { RelationService } from 'src/app/services/relation.service';\r\nimport { SearchService } from 'src/app/services/search.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-explore',\r\n  templateUrl: './explore.component.html',\r\n  styleUrls: ['./explore.component.scss']\r\n})\r\nexport class ExploreComponent implements OnInit {\r\n  currentUser: User = new User();\r\n  searchedUsers: User[] = [];\r\n  friends: Friendship[] = [];\r\n  friendRequests: Friendship[] = [];\r\n  chatrooms: Chatroom[] = [];\r\n\r\n  constructor(private router: Router,\r\n    private activedRoute: ActivatedRoute,\r\n    private userService: UserService,\r\n    private searchService: SearchService,\r\n    private relationService: RelationService,\r\n    private chattingService: ChattingService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.searchUserByKeyword();\r\n  }\r\n\r\n  async getUserInformation(): Promise<void> {\r\n    let userID = localStorage.getItem('authorizeToken');\r\n    if (userID) {\r\n      this.currentUser = await firstValueFrom(this.userService.getById(userID));\r\n\r\n      this.getFriendRequests();\r\n    }\r\n  }\r\n\r\n  getFriends(): void {\r\n    this.relationService.getUserRelationship(this.currentUser.id).subscribe(data => this.friends = data);\r\n  }\r\n\r\n  getFriendRequests(): void {\r\n    this.relationService.getFriendRequestByUserId(this.currentUser.id).subscribe(data => this.friendRequests = data);\r\n  }\r\n\r\n  async searchUserByKeyword(): Promise<void> {\r\n    await this.getUserInformation();\r\n\r\n    let keyword = this.activedRoute.snapshot.paramMap.get('keyword');\r\n    if (keyword) {\r\n      this.searchService.search(this.currentUser.id, keyword).subscribe(data => this.searchedUsers = data, error => console.log(error));\r\n    }\r\n  }\r\n\r\n  logout(): void {\r\n    Swal.fire({\r\n      icon: 'question',\r\n      title: 'Logout',\r\n      text: 'Are you sure?',\r\n      showCancelButton: true,\r\n      showConfirmButton: true,\r\n      focusCancel: true,\r\n      confirmButtonText: 'Yes, log me out',\r\n      cancelButtonText: 'No, stay here',\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33'\r\n    }).then(result => {\r\n      if (result.isConfirmed) {\r\n        localStorage.removeItem('authorizeToken');\r\n        this.router.navigateByUrl('');\r\n      }\r\n    });\r\n  }\r\n\r\n  showTab(tabIndex: number): void {\r\n    const tabHome = document.querySelector('.tab-home') as HTMLElement;\r\n    const tabFriends = document.querySelector('.tab-friends') as HTMLElement;\r\n    const tabSettings = document.querySelector('.tab-settings') as HTMLElement;\r\n\r\n    tabHome.style.display = 'none';\r\n    tabFriends.style.display = 'none';\r\n    tabSettings.style.display = 'none';\r\n\r\n    switch (tabIndex) {\r\n      case 0: {\r\n        tabHome.style.display = 'block';\r\n        break;\r\n      } case 1: {\r\n        tabFriends.style.display = 'block';\r\n        this.getFriends();\r\n        break;\r\n      } case 2: {\r\n        tabSettings.style.display = 'block';\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  navigateToWall(): void {\r\n    this.router.navigateByUrl('/home/wall');\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}