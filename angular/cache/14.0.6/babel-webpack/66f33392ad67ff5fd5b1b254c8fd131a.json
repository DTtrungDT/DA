{"ast":null,"code":"import _asyncToGenerator from \"D:/Code PJ/SocialNetworkWebApp/SocialNetworkWebApp-FE/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { firstValueFrom, lastValueFrom } from 'rxjs';\nimport { Util } from 'src/app/helpers/util';\nimport { Comment } from 'src/app/models/comment.model';\nimport { Post } from 'src/app/models/post.model';\nimport { React } from 'src/app/models/react.model';\nimport { User } from 'src/app/models/user.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/user.service\";\nimport * as i3 from \"src/app/services/post.service\";\nimport * as i4 from \"src/app/services/react.service\";\nimport * as i5 from \"src/app/services/newfeeds.service\";\nimport * as i6 from \"src/app/services/comment.service\";\nimport * as i7 from \"src/app/services/additional.service\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/forms\";\nimport * as i10 from \"../comment/comment.component\";\n\nfunction PostsComponent_div_0_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 33)(1, \"div\", 34);\n    i0.ɵɵlistener(\"click\", function PostsComponent_div_0_span_10_Template_div_click_1_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.onEllipsisButtonClick());\n    });\n    i0.ɵɵelement(2, \"i\", 35);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 36)(4, \"div\", 37);\n    i0.ɵɵelement(5, \"i\", 38);\n    i0.ɵɵtext(6, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 39);\n    i0.ɵɵlistener(\"click\", function PostsComponent_div_0_span_10_Template_div_click_7_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.onDeleteButtonClick());\n    });\n    i0.ɵɵelement(8, \"i\", 40);\n    i0.ɵɵtext(9, \"Delete \");\n    i0.ɵɵelementEnd()()();\n  }\n}\n\nfunction PostsComponent_div_0_p_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 41);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const line_r9 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(line_r9);\n  }\n}\n\nfunction PostsComponent_div_0_img_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 42);\n  }\n\n  if (rf & 2) {\n    const content_r10 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"src\", ctx_r3.getFullLinkContent(content_r10), i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction PostsComponent_div_0_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 43);\n    i0.ɵɵlistener(\"click\", function PostsComponent_div_0_div_33_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.getPostCommentsWithPaging());\n    });\n    i0.ɵɵtext(1, \"View more...\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PostsComponent_div_0_app_comment_34_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"app-comment\", 44);\n    i0.ɵɵlistener(\"onAvatarClick\", function PostsComponent_div_0_app_comment_34_Template_app_comment_onAvatarClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.navigateToWall($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const comment_r13 = ctx.$implicit;\n    i0.ɵɵproperty(\"commentData\", comment_r13);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"liked\": a0\n  };\n};\n\nfunction PostsComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"div\", 3)(3, \"div\", 4)(4, \"img\", 5);\n    i0.ɵɵlistener(\"click\", function PostsComponent_div_0_Template_img_click_4_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.navigateToWall());\n    })(\"error\", function PostsComponent_div_0_Template_img_error_4_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.postOwner.getDefaultAvatar());\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 6)(6, \"h3\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"small\", 7);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(10, PostsComponent_div_0_span_10_Template, 10, 0, \"span\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 9);\n    i0.ɵɵtemplate(12, PostsComponent_div_0_p_12_Template, 2, 1, \"p\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 11);\n    i0.ɵɵtemplate(14, PostsComponent_div_0_img_14_Template, 1, 1, \"img\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 13)(16, \"div\", 14)(17, \"span\", 15);\n    i0.ɵɵlistener(\"click\", function PostsComponent_div_0_Template_span_click_17_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.onLikeButtonClick());\n    });\n    i0.ɵɵelement(18, \"i\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"span\", 15);\n    i0.ɵɵlistener(\"click\", function PostsComponent_div_0_Template_span_click_19_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.onCommentButtonClick());\n    });\n    i0.ɵɵelement(20, \"i\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"span\");\n    i0.ɵɵelement(22, \"i\", 18);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(23, \"div\", 19)(24, \"span\", 20);\n    i0.ɵɵlistener(\"click\", function PostsComponent_div_0_Template_span_click_24_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.getPostCommentsWithPaging());\n    });\n    i0.ɵɵtext(25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"span\", 21);\n    i0.ɵɵelement(27, \"i\", 22);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(28, \"div\", 23);\n    i0.ɵɵelement(29, \"div\");\n    i0.ɵɵelementStart(30, \"p\", 24);\n    i0.ɵɵtext(31);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(32, \"div\", 25);\n    i0.ɵɵtemplate(33, PostsComponent_div_0_div_33_Template, 2, 0, \"div\", 26);\n    i0.ɵɵtemplate(34, PostsComponent_div_0_app_comment_34_Template, 1, 1, \"app-comment\", 27);\n    i0.ɵɵelementStart(35, \"div\", 28)(36, \"div\")(37, \"div\", 29);\n    i0.ɵɵlistener(\"click\", function PostsComponent_div_0_Template_div_click_37_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.navigateToWall());\n    });\n    i0.ɵɵelementStart(38, \"img\", 30);\n    i0.ɵɵlistener(\"error\", function PostsComponent_div_0_Template_img_error_38_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.currentUser.getDefaultAvatar());\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(39, \"form\", 31);\n    i0.ɵɵlistener(\"submit\", function PostsComponent_div_0_Template_form_submit_39_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r24.createComment());\n    });\n    i0.ɵɵelementStart(40, \"input\", 32);\n    i0.ɵɵlistener(\"ngModelChange\", function PostsComponent_div_0_Template_input_ngModelChange_40_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.comment = $event);\n    });\n    i0.ɵɵelementEnd()()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"src\", ctx_r0.postOwner.getAvatar(), i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.postOwner.getFullName());\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.timeDiff);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.postOwner.id === ctx_r0.currentUser.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.captionArray);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.postData.contents);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(13, _c0, ctx_r0.userReact));\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.commentCountString, \" \");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r0.likedByString);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.canViewMore);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.postData.comments);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"src\", ctx_r0.currentUser.getAvatar(), i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.comment);\n  }\n}\n\nexport class PostsComponent {\n  constructor(elementRef, router, userService, postService, reactService, newsfeedService, commentService, additionalService) {\n    this.elementRef = elementRef;\n    this.router = router;\n    this.userService = userService;\n    this.postService = postService;\n    this.reactService = reactService;\n    this.newsfeedService = newsfeedService;\n    this.commentService = commentService;\n    this.additionalService = additionalService;\n    this.postOwner = new User();\n    this.likedByString = '';\n    this.comment = '';\n    this.commentPaging = 0;\n    this.commentSize = 1;\n    this.commentCountString = '';\n    this.canViewMore = false;\n    this.splitComment = true;\n    this.timeDiff = '';\n  }\n\n  ngOnInit() {\n    this.convertPostData();\n    this.getTimeDiff();\n    this.getPostOwner();\n    this.getPostReacts(false);\n    this.getPostComments(this.commentSize);\n  }\n\n  ngAfterViewInit() {\n    this.handleMultiImages();\n  }\n\n  convertPostData() {\n    this.postData = Object.assign(new Post(), this.postData);\n    this.captionArray = this.postData.caption.split('\\n');\n  }\n\n  getPostOwner() {\n    if (this.postData) {\n      this.userService.getById(this.postData.userId).subscribe(data => this.postOwner = data, error => console.log(error));\n    }\n  }\n\n  getPostReacts(update) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this.postData) {\n        if (update) {\n          _this.postData.reacts = yield lastValueFrom(_this.newsfeedService.getPostReacts(_this.postData.id));\n        }\n\n        _this.userReact = _this.postData.reacts.find(react => react.userId == _this.currentUser.id);\n        let length = _this.postData.reacts.length;\n\n        if (length > 0) {\n          let otherUser = yield firstValueFrom(_this.userService.getById(_this.postData.reacts[0].userId));\n          _this.likedByString = _this.userReact ? 'Liked by you' : `Liked by ${otherUser.getFullName()}`;\n\n          if (length == 2) {\n            _this.likedByString += ` and other one`;\n          } else if (length > 2) {\n            _this.likedByString += ` and ${length - 1} others`;\n          }\n        } else {\n          _this.likedByString = '';\n        }\n      }\n    })();\n  }\n\n  getPostComments(size = -1) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this2.postData) {\n        _this2.splitComment = true;\n        _this2.commentPaging = 0;\n        _this2.postData.comments = yield lastValueFrom(_this2.newsfeedService.getPostComments(_this2.postData.id, _this2.commentPaging));\n        _this2.canViewMore = _this2.postData.comments.length > size;\n        _this2.postData.comments = _this2.postData.comments.slice(-size);\n\n        _this2.getCommentCount();\n      }\n    })();\n  }\n\n  getPostCommentsWithPaging() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this3.postData) {\n        let comments = yield lastValueFrom(_this3.newsfeedService.getPostComments(_this3.postData.id, _this3.commentPaging));\n\n        if (comments.length == 0) {\n          _this3.canViewMore = false;\n          return;\n        }\n\n        if (_this3.splitComment) {\n          _this3.postData.comments = [];\n          _this3.splitComment = false;\n          _this3.commentSize = 1;\n        }\n\n        comments = comments.concat(_this3.postData.comments);\n        _this3.postData.comments = comments;\n        _this3.commentPaging++;\n\n        _this3.getCommentCount();\n      }\n    })();\n  }\n\n  getCommentCount() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this4.postData) {\n        let commentCount = yield lastValueFrom(_this4.additionalService.getTotalComments(_this4.postData.id));\n\n        if (commentCount <= 0) {\n          _this4.commentCountString = '';\n        } else if (commentCount == 1) {\n          _this4.commentCountString = '1 comment';\n        } else if (commentCount > 1) {\n          _this4.commentCountString = `${commentCount} comments`;\n        }\n      }\n    })();\n  }\n\n  getFullLinkContent(content) {\n    return Util.getFullLinkContent(content);\n  }\n\n  getTimeDiff() {\n    if (this.postData) {\n      this.timeDiff = Util.getTimeDiff(this.postData.createdTime);\n    }\n  }\n\n  handleMultiImages() {\n    if (this.postData && this.postData.contents) {\n      let length = this.postData.contents.length;\n\n      if (length > 1) {\n        const wrapper = this.elementRef.nativeElement.querySelector('.photo');\n        const images = wrapper.querySelectorAll('.photo img');\n        wrapper.style.display = 'flex';\n        images.forEach(img => {\n          img.style.width = 100 / length + '%';\n        });\n      }\n    }\n  }\n\n  createComment() {\n    if (this.comment && this.postData) {\n      let newComment = new Comment();\n      newComment.postId = this.postData.id;\n      newComment.userId = this.currentUser.id;\n      newComment.comment = this.comment;\n      this.comment = '';\n      this.commentService.add(newComment).subscribe(success => this.getPostComments(++this.commentSize));\n    }\n  }\n\n  onEllipsisButtonClick() {\n    const popup = this.elementRef.nativeElement.querySelector('.edit .edit-popup');\n\n    if (popup) {\n      let visible = popup.style.display && popup.style.display !== 'none';\n      popup.style.display = visible ? 'none' : 'block';\n    }\n  }\n\n  onDeleteButtonClick() {\n    if (this.postData) {\n      this.postService.delete(this.postData.id).subscribe(data => this.router.navigateByUrl(''));\n    }\n  }\n\n  onLikeButtonClick() {\n    if (this.postData && this.currentUser) {\n      if (this.userReact) {\n        this.reactService.delete(this.userReact.id).subscribe(success => this.getPostReacts(true));\n      } else {\n        let react = new React();\n        react.postId = this.postData.id;\n        react.userId = this.currentUser.id;\n        react.type = 0;\n        this.reactService.add(react).subscribe(success => this.getPostReacts(true));\n      }\n    }\n  }\n\n  onCommentButtonClick() {\n    const input = this.elementRef.nativeElement.querySelector('.create-comment input');\n    input.focus();\n  }\n\n  navigateToWall(userId = '') {\n    userId = userId ? userId : this.postOwner.id;\n\n    if (this.currentUser && this.currentUser.id === userId) {\n      this.router.navigateByUrl('home/wall');\n    } else {\n      this.router.navigateByUrl(`home/wall/${userId}`);\n    }\n  }\n\n}\n\nPostsComponent.ɵfac = function PostsComponent_Factory(t) {\n  return new (t || PostsComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.PostService), i0.ɵɵdirectiveInject(i4.ReactService), i0.ɵɵdirectiveInject(i5.NewsFeedService), i0.ɵɵdirectiveInject(i6.CommentService), i0.ɵɵdirectiveInject(i7.AdditionalService));\n};\n\nPostsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PostsComponent,\n  selectors: [[\"app-posts\"]],\n  inputs: {\n    postData: \"postData\",\n    currentUser: \"currentUser\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"feed\", 4, \"ngIf\"], [1, \"feed\"], [1, \"head\"], [1, \"user\"], [1, \"profile-picture\"], [\"alt\", \"\", 3, \"src\", \"click\", \"error\"], [1, \"ingo\"], [1, \"text-muted\"], [\"class\", \"edit\", 4, \"ngIf\"], [1, \"caption\"], [\"class\", \"line\", 4, \"ngFor\", \"ngForOf\"], [1, \"photo\"], [\"alt\", \"\", 3, \"src\", 4, \"ngFor\", \"ngForOf\"], [1, \"action-buttons\"], [1, \"interaction-buttons\"], [3, \"click\"], [1, \"uil\", \"uil-thumbs-up\", 3, \"ngClass\"], [1, \"uil\", \"uil-comment-alt-dots\"], [1, \"uil\", \"uil-share\"], [1, \"bookmark\"], [1, \"comment-count\", \"text-muted\", 3, \"click\"], [\"hidden\", \"\"], [1, \"uil\", \"uil-bookmark-full\"], [1, \"liked-by\"], [1, \"like-text\", \"text-muted\", \"text-bold\"], [1, \"comments-container\"], [\"class\", \"view-more text-muted\", 3, \"click\", 4, \"ngIf\"], [3, \"commentData\", \"onAvatarClick\", 4, \"ngFor\", \"ngForOf\"], [1, \"create-comment\"], [1, \"profile-picture\", 3, \"click\"], [\"alt\", \"\", 3, \"src\", \"error\"], [3, \"submit\"], [\"type\", \"text\", \"placeholder\", \"Write your comment...\", \"name\", \"inputComment\", 3, \"ngModel\", \"ngModelChange\"], [1, \"edit\"], [\"id\", \"ellipsisButton\", 1, \"ellipsis\", 3, \"click\"], [1, \"uil\", \"uil-ellipsis-h\"], [\"id\", \"editPopup\", 1, \"edit-popup\"], [\"id\", \"editButton\", 1, \"edit-buttons\"], [1, \"uil\", \"uil-pen\"], [\"id\", \"deleteButton\", 1, \"edit-buttons\", 3, \"click\"], [1, \"uil\", \"uil-trash-alt\"], [1, \"line\"], [\"alt\", \"\", 3, \"src\"], [1, \"view-more\", \"text-muted\", 3, \"click\"], [3, \"commentData\", \"onAvatarClick\"]],\n  template: function PostsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, PostsComponent_div_0_Template, 41, 15, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.postData);\n    }\n  },\n  dependencies: [i8.NgClass, i8.NgForOf, i8.NgIf, i9.ɵNgNoValidate, i9.DefaultValueAccessor, i9.NgControlStatus, i9.NgControlStatusGroup, i9.NgModel, i9.NgForm, i10.CommentComponent],\n  styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\tvar __webpack_modules__ = ({\\n\\n 62:\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/sass-loader/dist/cjs.js):\\\\nSassError: Expected expression.\\\\n   \\u2577\\\\n61 \\u2502         padding-bottom: -;\\\\r\\\\n   \\u2502                          ^\\\\n   \\u2575\\\\n  src\\\\\\\\app\\\\\\\\components\\\\\\\\posts\\\\\\\\posts.component.scss 61:26  root stylesheet\\\");\\n\\n })\\n\\n \\t});\\n\\n \\t\\n \\t// startup\\n \\t// Load entry module and return exports\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n \\tvar __webpack_exports__ = {};\\n \\t__webpack_modules__[62]();\\n \\tresource = __webpack_exports__;\\n \\t\\n })()\\n;\"]\n});","map":{"version":3,"mappings":"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","names":["firstValueFrom","lastValueFrom","Util","Comment","Post","React","User","i0","PostsComponent","constructor","elementRef","router","userService","postService","reactService","newsfeedService","commentService","additionalService","ngOnInit","convertPostData","getTimeDiff","getPostOwner","getPostReacts","getPostComments","commentSize","ngAfterViewInit","handleMultiImages","postData","Object","assign","captionArray","caption","split","getById","userId","subscribe","data","postOwner","error","console","log","update","reacts","id","userReact","find","react","currentUser","length","otherUser","likedByString","getFullName","size","splitComment","commentPaging","comments","canViewMore","slice","getCommentCount","getPostCommentsWithPaging","concat","commentCount","getTotalComments","commentCountString","getFullLinkContent","content","timeDiff","createdTime","contents","wrapper","nativeElement","querySelector","images","querySelectorAll","style","display","forEach","img","width","createComment","comment","newComment","postId","add","success","onEllipsisButtonClick","popup","visible","onDeleteButtonClick","delete","navigateByUrl","onLikeButtonClick","type","onCommentButtonClick","input","focus","navigateToWall","selectors","inputs","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\Code PJ\\SocialNetworkWebApp\\SocialNetworkWebApp-FE\\src\\app\\components\\posts\\posts.component.ts","D:\\Code PJ\\SocialNetworkWebApp\\SocialNetworkWebApp-FE\\src\\app\\components\\posts\\posts.component.html"],"sourcesContent":["import { AfterViewInit, Component, ElementRef, Input, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { firstValueFrom, lastValueFrom } from 'rxjs';\r\nimport { AppComponent } from 'src/app/app.component';\r\nimport { Util } from 'src/app/helpers/util';\r\nimport { Comment } from 'src/app/models/comment.model';\r\nimport { Content } from 'src/app/models/content.model';\r\nimport { Post } from 'src/app/models/post.model';\r\nimport { React } from 'src/app/models/react.model';\r\nimport { User } from 'src/app/models/user.model';\r\nimport { AdditionalService } from 'src/app/services/additional.service';\r\nimport { CommentService } from 'src/app/services/comment.service';\r\nimport { NewsFeedService } from 'src/app/services/newfeeds.service';\r\nimport { PostService } from 'src/app/services/post.service';\r\nimport { ReactService } from 'src/app/services/react.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-posts',\r\n  templateUrl: './posts.component.html',\r\n  styleUrls: ['./posts.component.scss']\r\n})\r\nexport class PostsComponent implements OnInit, AfterViewInit {\r\n  @Input() postData?: Post;\r\n  @Input() currentUser!: User;\r\n  postOwner: User = new User();\r\n\r\n  captionArray?: string[];\r\n\r\n  likedByString: string = '';\r\n  userReact?: React;\r\n  comment: string = '';\r\n\r\n  commentPaging: number = 0;\r\n  commentSize: number = 1;\r\n\r\n  commentCountString: string = '';\r\n\r\n  canViewMore: boolean = false;\r\n  splitComment: boolean = true;\r\n\r\n  timeDiff: string = '';\r\n\r\n  constructor(\r\n    private elementRef: ElementRef,\r\n    private router: Router,\r\n    private userService: UserService,\r\n    private postService: PostService,\r\n    private reactService: ReactService,\r\n    private newsfeedService: NewsFeedService,\r\n    private commentService: CommentService,\r\n    private additionalService: AdditionalService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.convertPostData();\r\n    this.getTimeDiff();\r\n    this.getPostOwner();\r\n    this.getPostReacts(false);\r\n    this.getPostComments(this.commentSize);\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.handleMultiImages();\r\n  }\r\n\r\n  convertPostData(): void {\r\n    this.postData = Object.assign(new Post(), this.postData);\r\n    this.captionArray = this.postData.caption.split('\\n');\r\n  }\r\n\r\n  getPostOwner(): void {\r\n    if (this.postData) {\r\n      this.userService\r\n        .getById(this.postData.userId)\r\n        .subscribe(data =>\r\n          this.postOwner = data,\r\n          error => console.log(error));\r\n    }\r\n  }\r\n\r\n  async getPostReacts(update: boolean): Promise<void> {\r\n    if (this.postData) {\r\n      if (update) {\r\n        this.postData.reacts = await lastValueFrom(this.newsfeedService.getPostReacts(this.postData.id));\r\n      }\r\n\r\n      this.userReact = this.postData.reacts!.find(react => react.userId == this.currentUser!.id);\r\n\r\n      let length = this.postData.reacts!.length;\r\n\r\n      if (length > 0) {\r\n        let otherUser = await firstValueFrom(this.userService.getById(this.postData.reacts![0].userId));\r\n        this.likedByString = this.userReact ? 'Liked by you' : `Liked by ${otherUser.getFullName()}`;\r\n\r\n        if (length == 2) {\r\n          this.likedByString += ` and other one`;\r\n        } else if (length > 2) {\r\n          this.likedByString += ` and ${length - 1} others`;\r\n        }\r\n      }\r\n      else {\r\n        this.likedByString = '';\r\n      }\r\n    }\r\n  }\r\n\r\n  async getPostComments(size: number = -1): Promise<void> {\r\n    if (this.postData) {\r\n      this.splitComment = true;\r\n      this.commentPaging = 0;\r\n\r\n      this.postData.comments = await lastValueFrom(this.newsfeedService.getPostComments(this.postData.id, this.commentPaging));\r\n\r\n      this.canViewMore = this.postData.comments.length > size;\r\n      this.postData.comments = this.postData.comments.slice(-size);\r\n\r\n      this.getCommentCount();\r\n    }\r\n  }\r\n\r\n  async getPostCommentsWithPaging(): Promise<void> {\r\n    if (this.postData) {\r\n      let comments = await lastValueFrom(this.newsfeedService.getPostComments(this.postData.id, this.commentPaging));\r\n\r\n      if (comments.length == 0) {\r\n        this.canViewMore = false;\r\n        return;\r\n      }\r\n\r\n      if (this.splitComment) {\r\n        this.postData.comments = [];\r\n        this.splitComment = false;\r\n        this.commentSize = 1;\r\n      }\r\n\r\n      comments = comments.concat(this.postData.comments!);\r\n      this.postData.comments = comments;\r\n\r\n      this.commentPaging++;\r\n\r\n      this.getCommentCount();\r\n    }\r\n  }\r\n\r\n  async getCommentCount(): Promise<void> {\r\n    if (this.postData) {\r\n      let commentCount = await lastValueFrom(this.additionalService.getTotalComments(this.postData.id));\r\n\r\n      if (commentCount <= 0) {\r\n        this.commentCountString = '';\r\n      }\r\n      else if (commentCount == 1) {\r\n        this.commentCountString = '1 comment';\r\n      } else if (commentCount > 1) {\r\n        this.commentCountString = `${commentCount} comments`;\r\n      }\r\n    }\r\n  }\r\n\r\n  getFullLinkContent(content: Content): string {\r\n    return Util.getFullLinkContent(content);\r\n  }\r\n\r\n  getTimeDiff() {\r\n    if (this.postData) {\r\n      this.timeDiff = Util.getTimeDiff(this.postData.createdTime);\r\n    }\r\n  }\r\n\r\n  handleMultiImages(): void {\r\n    if (this.postData && this.postData.contents) {\r\n      let length = this.postData.contents.length;\r\n\r\n      if (length > 1) {\r\n        const wrapper = this.elementRef.nativeElement.querySelector('.photo') as HTMLElement;\r\n        const images = wrapper.querySelectorAll('.photo img');\r\n\r\n        wrapper.style.display = 'flex';\r\n        images.forEach(img => {\r\n          (img as HTMLElement).style.width = (100 / length) + '%';\r\n        });\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  createComment(): void {\r\n    if (this.comment && this.postData) {\r\n      let newComment = new Comment();\r\n      newComment.postId = this.postData.id;\r\n      newComment.userId = this.currentUser.id;\r\n      newComment.comment = this.comment;\r\n\r\n      this.comment = '';\r\n\r\n      this.commentService.add(newComment).subscribe(success => this.getPostComments(++this.commentSize));\r\n    }\r\n  }\r\n\r\n  onEllipsisButtonClick(): void {\r\n    const popup = this.elementRef.nativeElement.querySelector('.edit .edit-popup');\r\n\r\n    if (popup) {\r\n      let visible = popup.style.display && popup.style.display !== 'none';\r\n      popup.style.display = visible ? 'none' : 'block';\r\n    }\r\n  }\r\n\r\n  onDeleteButtonClick(): void {\r\n    if (this.postData) {\r\n      this.postService.delete(this.postData.id).subscribe(data => this.router.navigateByUrl(''));\r\n    }\r\n  }\r\n\r\n  onLikeButtonClick(): void {\r\n    if (this.postData && this.currentUser) {\r\n      if (this.userReact) {\r\n        this.reactService.delete(this.userReact.id).subscribe(success => this.getPostReacts(true));\r\n      }\r\n      else {\r\n        let react = new React();\r\n        react.postId = this.postData.id;\r\n        react.userId = this.currentUser.id;\r\n        react.type = 0;\r\n\r\n        this.reactService.add(react).subscribe(success => this.getPostReacts(true));\r\n      }\r\n    }\r\n  }\r\n\r\n  onCommentButtonClick(): void {\r\n    const input = this.elementRef.nativeElement.querySelector('.create-comment input') as HTMLInputElement;\r\n    input.focus();\r\n  }\r\n\r\n  navigateToWall(userId: string = ''): void {\r\n    userId = userId ? userId : this.postOwner.id;\r\n\r\n    if (this.currentUser && this.currentUser.id === userId) {\r\n      this.router.navigateByUrl('home/wall');\r\n    }\r\n    else {\r\n      this.router.navigateByUrl(`home/wall/${userId}`);\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"feed\" *ngIf=\"this.postData\">\r\n    <div class=\"head\">\r\n        <div class=\"user\">\r\n            <div class=\"profile-picture\">\r\n                <img [src]=\"this.postOwner.getAvatar()\" (click)=\"navigateToWall()\"\r\n                    (error)=\"this.postOwner.getDefaultAvatar()\" alt=\"\">\r\n            </div>\r\n            <div class=\"ingo\">\r\n                <h3>{{this.postOwner.getFullName()}}</h3>\r\n                <small class=\"text-muted\">{{timeDiff}}</small>\r\n            </div>\r\n        </div>\r\n        <span class=\"edit\" *ngIf=\"postOwner.id === currentUser.id\">\r\n            <div class=\"ellipsis\" id=\"ellipsisButton\" (click)=\"onEllipsisButtonClick()\"><i\r\n                    class=\"uil uil-ellipsis-h\"></i></div>\r\n            <div class=\"edit-popup\" id=\"editPopup\">\r\n                <div class=\"edit-buttons\" id=\"editButton\"><i class=\"uil uil-pen\"></i>Edit</div>\r\n                <div class=\"edit-buttons\" id=\"deleteButton\" (click)=\"onDeleteButtonClick()\">\r\n                    <i class=\"uil uil-trash-alt\"></i>Delete\r\n                </div>\r\n            </div>\r\n        </span>\r\n    </div>\r\n\r\n    <div class=\"caption\">\r\n        <p *ngFor=\"let line of this.captionArray\" class=\"line\">{{line}}</p>\r\n    </div>\r\n\r\n    <div class=\"photo\">\r\n        <img *ngFor=\"let content of this.postData.contents\" [src]=\"getFullLinkContent(content)\" alt=\"\">\r\n    </div>\r\n\r\n    <div class=\"action-buttons\">\r\n        <div class=\"interaction-buttons\">\r\n            <span (click)=\"onLikeButtonClick()\"><i class=\"uil uil-thumbs-up\"\r\n                    [ngClass]=\"{'liked': userReact}\"></i></span>\r\n            <span (click)=\"onCommentButtonClick()\"><i class=\"uil uil-comment-alt-dots\"></i></span>\r\n            <span><i class=\"uil uil-share\"></i></span>\r\n        </div>\r\n\r\n        <div class=\"bookmark\">\r\n            <span class=\"comment-count text-muted\" (click)=\"getPostCommentsWithPaging()\">\r\n                {{this.commentCountString}}\r\n            </span>\r\n            <span hidden><i class=\"uil uil-bookmark-full\"></i></span>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"liked-by\">\r\n        <div>\r\n            <!-- <span><img src=\"https://i.pinimg.com/736x/a6/61/f4/a661f414ac9a447b953338b2c953bb38.jpg\" alt=\"\"></span>\r\n            <span><img src=\"https://cdn.iconscout.com/icon/free/png-256/avatar-370-456322.png\" alt=\"\"></span>\r\n            <span><img\r\n                    src=\"https://guantanamocity.org/wp-content/uploads/2020/12/tong-hop-avatar-anime-avatar-anime-doi-cool-ngau-cute-panda-brown-1.jpg\"\r\n                    alt=\"\"></span> -->\r\n        </div>\r\n        <p class=\"like-text text-muted text-bold\">{{this.likedByString}}</p>\r\n    </div>\r\n\r\n    <div class=\"comments-container\">\r\n        <div class=\"view-more text-muted\" *ngIf=\"canViewMore\" (click)=\"getPostCommentsWithPaging()\">View more...</div>\r\n\r\n        <app-comment *ngFor=\"let comment of this.postData.comments\" [commentData]=\"comment\"\r\n            (onAvatarClick)=\"navigateToWall($event)\"></app-comment>\r\n\r\n        <div class=\"create-comment\">\r\n            <div>\r\n                <div class=\"profile-picture\" (click)=\"navigateToWall()\">\r\n                    <img [src]=\"this.currentUser.getAvatar()\" (error)=\"this.currentUser.getDefaultAvatar()\" alt=\"\">\r\n                </div>\r\n            </div>\r\n\r\n            <form (submit)=\"createComment()\">\r\n                <input type=\"text\" placeholder=\"Write your comment...\" name=\"inputComment\" [(ngModel)]=\"this.comment\">\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>"]},"metadata":{},"sourceType":"module"}